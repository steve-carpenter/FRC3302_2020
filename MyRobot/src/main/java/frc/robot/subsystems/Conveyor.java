// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.subsystems;


import frc.robot.RobotMap;
import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Conveyor extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private Spark bottomConveyor;
private Spark topConveyor;
private DigitalInput ballLocation1;
private DigitalInput ballLocation2;
private DigitalInput ballLocation3;
private DigitalInput ballLocation4;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public Conveyor() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
bottomConveyor = new Spark(RobotMap.CONVEYOR_BOTTOM_ROLLER_SPARK);
topConveyor = new Spark(RobotMap.CONVEYOR_TOP_ROLLER_SPARK);
ballLocation1 = new DigitalInput(RobotMap.CONVEYOR_BALL_1_PRESENT);
ballLocation2 = new DigitalInput(RobotMap.CONVEYOR_BALL_2_PRESENT);
ballLocation3 = new DigitalInput(RobotMap.CONVEYOR_BALL_3_PRESENT);
ballLocation4 = new DigitalInput(RobotMap.CONVEYOR_BALL_4_PRESENT);

bottomConveyor.setInverted(false);
topConveyor.setInverted(false);       

addChild("BottomConveyor",bottomConveyor);
addChild("TopConveyor",topConveyor);
addChild("BallLocation1",ballLocation1);
addChild("BallLocation2",ballLocation2);
addChild("BallLocation3",ballLocation3);
addChild("BallLocation4",ballLocation4);


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void topConveyor(int speed){
        topConveyor.set(speed);
    }

    public void bottomConveyor(int speed){
        bottomConveyor.set(speed);
    }

    public boolean isBall1Present(){
        return !ballLocation1.get();
    }

    public boolean isBall2Present(){
        return !ballLocation1.get();
    }

    public boolean isBall3Present(){
        return !ballLocation1.get();
    }

    public boolean isBall4Present(){
        return !ballLocation1.get();
    }

}

